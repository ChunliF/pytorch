graph(%a.1_data : Dynamic
      %a.1_mask : Dynamic
      %a.1_dims : Dynamic) {
  %3 : int = prim::Constant[value={1}]()
  %4 : Dynamic = prim::NumToTensor(%3)
  %data.1 : Dynamic = aten::unsqueeze[dim=0](%4)
  %6 : int = prim::Constant[value={1}]()
  %7 : int = prim::Constant[value={0}]()
  %8 : int = prim::Constant[value={0}]()
  %9 : int[] = prim::Constant[value= 0 -1 [ CPULongTensor{2} ]]()
  %10 : Dynamic = prim::NumToTensor(%6)
  %11 : int[] = aten::stack[dim=0](%10)
  %mask.1 : Dynamic = aten::ones(%11, %7, %8, %9)
  %13 : int = prim::Constant[value={0}]()
  %14 : int = prim::Constant[value={0}]()
  %15 : int = prim::Constant[value={0}]()
  %16 : int[] = prim::Constant[value= 0 -1 [ CPULongTensor{2} ]]()
  %17 : Dynamic = prim::NumToTensor(%13)
  %18 : int[] = aten::stack[dim=0](%17)
  %dims.1 : Dynamic = aten::zeros(%18, %14, %15, %16)
  %20 : Dynamic = aten::type_as(%data.1, %a.1_data)
  %21 : Long() = prim::Constant[value={1}]()
  %22 : Number = prim::TensorToNum(%21)
  %data : Dynamic = aten::add(%a.1_data, %20, %22)
  %mask : Dynamic = aten::mul(%a.1_mask, %mask.1)
  %dims : Dynamic = aten::__or__(%a.1_dims, %dims.1)
  return (%data, %mask, %dims);
}
